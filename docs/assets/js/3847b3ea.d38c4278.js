"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[214],{1111:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>a});var o=n(4848),s=n(8453);const i={sidebar_position:3},c="Setup",r={id:"setup",title:"Setup",description:"otoroshictl is capable of managing multiple otoroshi clusters with multiple users, but the first thing we need to make is to create the otoroshictl config file.",source:"@site/docs/setup.md",sourceDirName:".",slug:"/setup",permalink:"/otoroshictl/docs/setup",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Install",permalink:"/otoroshictl/docs/install"},next:{title:"Usage",permalink:"/otoroshictl/docs/category/usage"}},l={},a=[{value:"Create a new cluster",id:"create-a-new-cluster",level:2},{value:"Change the current config.",id:"change-the-current-config",level:2},{value:"Modify an existing cluster",id:"modify-an-existing-cluster",level:2},{value:"All possible config. subcommands",id:"all-possible-config-subcommands",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"setup",children:"Setup"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"otoroshictl"})," is capable of managing multiple otoroshi clusters with multiple users, but the first thing we need to make is to create the ",(0,o.jsx)(t.code,{children:"otoroshictl"})," config file."]}),"\n",(0,o.jsx)(t.p,{children:"To do that, try"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"$ otoroshictl config reset\n"})}),"\n",(0,o.jsx)(t.p,{children:"then you'll be able to list the otoroshi cluster you can manage with"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"$ otoroshictl config list\n\n+---------+---------+------------+\n| name    | current | cloud_apim |\n+---------+---------+------------+\n| default | yes     |            |\n+---------+---------+------------+\n"})}),"\n",(0,o.jsx)(t.p,{children:"and display the current one"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"$ otoroshictl config current-config\n\n---\napiVersion: v1\nkind: OtoroshiCtlConfig\nmetadata: {}\ncloud_apim: ~\nusers:\n  - name: default\n    client_id: admin-api-apikey-id\n    client_secret: admin-api-apikey-secret\n    health_key: ~\ncontexts:\n  - name: default\n    cluster: default\n    user: default\n    cloud_apim: false\nclusters:\n  - name: default\n    hostname: otoroshi-api.oto.tools\n    ip_addresses: ~\n    port: 8080\n    tls: false\n    client_cert: ~\n    routing_hostname: ~\n    routing_port: ~\n    routing_tls: ~\n    routing_ip_addresses: ~\ncurrent_context: default\n"})}),"\n",(0,o.jsx)(t.p,{children:"by default the registered otoroshi cluster is supposed to be local and use default credentials, but you can modify it of even create a new one"}),"\n",(0,o.jsx)(t.h2,{id:"create-a-new-cluster",children:"Create a new cluster"}),"\n",(0,o.jsx)(t.p,{children:"to create a new cluster configuration just do the following"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"$ otoroshictl config add new-cluster --hostname otoroshi.foo.bar --port 8443 --tls --client-id xxx --client-secret xxxxx\n"})}),"\n",(0,o.jsxs)(t.p,{children:["you can even add ",(0,o.jsx)(t.code,{children:"--current"})," to make it the current one"]}),"\n",(0,o.jsx)(t.p,{children:"now if you list your clusters you have"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"$ otoroshictl config list\n\n+-------------+---------+------------+\n| name        | current | cloud_apim |\n+-------------+---------+------------+\n| default     |         |            |\n+-------------+---------+------------+\n| new-cluster | yes     |            |\n+-------------+---------+------------+\n"})}),"\n",(0,o.jsx)(t.p,{children:"with the content"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"$ otoroshictl config current-config\n\n---\napiVersion: v1\nkind: OtoroshiCtlConfig\nmetadata: {}\ncloud_apim: ~\nusers:\n  - name: default\n    client_id: admin-api-apikey-id\n    client_secret: admin-api-apikey-secret\n    health_key: ~\n  - name: new-cluster\n    client_id: xxx\n    client_secret: xxxxx\n    health_key: ~\ncontexts:\n  - name: default\n    cluster: default\n    user: default\n    cloud_apim: false\n  - name: new-cluster\n    cluster: new-cluster\n    user: new-cluster\n    cloud_apim: false\nclusters:\n  - name: default\n    hostname: otoroshi-api.oto.tools\n    ip_addresses: ~\n    port: 8080\n    tls: false\n    client_cert: ~\n    routing_hostname: ~\n    routing_port: ~\n    routing_tls: ~\n    routing_ip_addresses: ~\n  - name: new-cluster\n    hostname: otoroshi.foo.bar\n    ip_addresses: ~\n    port: 8443\n    tls: true\n    client_cert: ~\n    routing_hostname: ~\n    routing_port: ~\n    routing_tls: false\n    routing_ip_addresses: ~\ncurrent_context: new-cluster\n"})}),"\n",(0,o.jsx)(t.h2,{id:"change-the-current-config",children:"Change the current config."}),"\n",(0,o.jsxs)(t.p,{children:["you can change the current config at any moment using the ",(0,o.jsx)(t.code,{children:"use"})," command"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"$ otoroshictl config list\n\n+-------------+---------+------------+\n| name        | current | cloud_apim |\n+-------------+---------+------------+\n| default     | yes     |            |\n+-------------+---------+------------+\n| new-cluster |         |            |\n+-------------+---------+------------+\n\n$ otoroshictl config use new-cluster\n$ otoroshictl config list\n\n+-------------+---------+------------+\n| name        | current | cloud_apim |\n+-------------+---------+------------+\n| default     |         |            |\n+-------------+---------+------------+\n| new-cluster | yes     |            |\n+-------------+---------+------------+\n\n"})}),"\n",(0,o.jsx)(t.h2,{id:"modify-an-existing-cluster",children:"Modify an existing cluster"}),"\n",(0,o.jsxs)(t.p,{children:["you can also change an existing configuration with the commands ",(0,o.jsx)(t.code,{children:"set-cluster"}),", ",(0,o.jsx)(t.code,{children:"set-user"}),", ",(0,o.jsx)(t.code,{children:"set-context"})]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"$ otoroshictl config set-cluster new-cluster --hostname otoroshi.bar.foo --port 8080 --tls false\n$ otoroshictl config set-user new-cluster --client-id yyy ---client-id yyyyyyy\n\n$ otoroshictl config current-config\n\n---\napiVersion: v1\nkind: OtoroshiCtlConfig\nmetadata: {}\ncloud_apim: ~\nusers:\n  - name: default\n    client_id: admin-api-apikey-id\n    client_secret: admin-api-apikey-secret\n    health_key: ~\n  - name: new-cluster\n    client_id: yyy\n    client_secret: yyyyyyy\n    health_key: ~\ncontexts:\n  - name: default\n    cluster: default\n    user: default\n    cloud_apim: false\n  - name: new-cluster\n    cluster: new-cluster\n    user: new-cluster\n    cloud_apim: false\nclusters:\n  - name: default\n    hostname: otoroshi-api.oto.tools\n    ip_addresses: ~\n    port: 8080\n    tls: false\n    client_cert: ~\n    routing_hostname: ~\n    routing_port: ~\n    routing_tls: ~\n    routing_ip_addresses: ~\n  - name: new-cluster\n    hostname: otoroshi.bar.foo\n    ip_addresses: ~\n    port: 8080\n    tls: false\n    client_cert: ~\n    routing_hostname: ~\n    routing_port: ~\n    routing_tls: false\n    routing_ip_addresses: ~\ncurrent_context: new-cluster\n"})}),"\n",(0,o.jsx)(t.h2,{id:"all-possible-config-subcommands",children:"All possible config. subcommands"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"$ otoroshictl config -h\n\nManage all the otoroshi cluster configurations you want to connect to with otoroshictl\n\nUsage: otoroshictl config [OPTIONS] <COMMAND>\n\nCommands:\n  current-config       Display the current config. file content\n  edit-current-config  Edit the current config. file\n  current-location     Display current config. location\n  current-context      Display current context\n  use-context          Set the current context\n  use                  Set the current context\n  rename-context       Rename a context\n  list                 Display the list of usable contexts\n  list-clusters        Display the list of clusters\n  list-users           Display the list of users\n  list-contexts        Display the list of contexts\n  set-cluster          Create or update a cluster\n  set-user             Create or update a user\n  set-context          Create or update a context\n  add                  Create and set a full config\n  delete-cluster       Delete a cluster\n  delete-user          Delete a user\n  delete-context       Delete a context\n  delete               Delete a full context with the associated cluster and user\n  reset                Delete configuration and start with a clean one\n  import               Import a context file with current context file\n  help                 Print this message or the help of the given subcommand(s)\n\nOptions:\n  -v, --verbose\n          Turn debugging information on\n  -o, --ouput <FORMAT>\n          Change the rendering format (can be one of: json, yaml, json_pretty)\n  -c, --config-file <FILE or URL>\n          Sets a custom config file\n      --otoroshi-cluster-tls\n          Sets the tls flag to connect to a custom otoroshi cluster without using a config file\n      --otoroshi-cluster-hostname <HOSTNAME>\n          Sets the hostname to connect to a custom otoroshi cluster without using a config file\n      --otoroshi-cluster-port <PORT>\n          Sets the port to connect to a custom otoroshi cluster without using a config file\n      --otoroshi-cluster-routing-tls\n          Sets the tls flag to connect to a custom otoroshi cluster without using a config file\n      --otoroshi-cluster-routing-hostname <HOSTNAME>\n          Sets the hostname to connect to a custom otoroshi cluster without using a config file\n      --otoroshi-cluster-routing-port <PORT>\n          Sets the port to connect to a custom otoroshi cluster without using a config file\n      --otoroshi-user-client-id <CLIENT_ID>\n          Sets the client_id to connect to a custom otoroshi cluster without using a config file\n      --otoroshi-user-client-secret <CLIENT_SECRET>\n          Sets the client_secret to connect to a custom otoroshi cluster without using a config file\n      --otoroshi-user-health-key <HEALTH_KEY>\n          Sets the health_key to connect to a custom otoroshi cluster without using a config file\n      --otoroshi-cluster-cert-location <FILE>\n          Sets the client cert location to connect to a custom otoroshi cluster without using a config file\n      --otoroshi-cluster-key-location <FILE>\n          Sets the client cert key location to connect to a custom otoroshi cluster without using a config file\n      --otoroshi-cluster-ca-location <FILE>\n          Sets the client cert ca location to connect to a custom otoroshi cluster without using a config file\n  -h, --help\n          Print help\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>r});var o=n(6540);const s={},i=o.createContext(s);function c(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);